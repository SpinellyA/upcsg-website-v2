'use client'

import ReciepientInformation from './ReciepientInformation'
import OrderedList from './OrderedList'
import { HiOutlineArrowLeft } from "react-icons/hi2";
import { useState } from 'react'
import { merchItems } from '@/constants/merch'

interface CheckoutPopProps {    
    handleCheckoutPop: () => void
}

interface Item {
    name: string;
    sizes: string[];
    colors: string[];
    quantity: number;
    price: number;
    images: string[];
}

const calculateTotalPrice = (items: Item[]): number => {
    return items.reduce((total, item) => total + item.price * item.quantity, 0);
};

const CheckoutPop: React.FC<CheckoutPopProps> = ({ handleCheckoutPop }) => {

    const [formData, setFormData] = useState<{
        name: string;
        year: string;
        course: string;
        email: string;
        number: string;
        paymentOption: string;
        image: File | null;
    }>({
        name: '',
        year: '',
        course: '',
        email: '',
        number: '',
        paymentOption: '',
        image: null,
    })

    const [selectedYear, setSelectedYear] = useState('N/A')
    const [selectedPaymentOption, setSeelctedPaymentOption] = useState('GCASH')

    const items = merchItems.slice(0,3).map((item) => ({
        name: item.name,
        sizes: item.sizes,
        colors: item.colors,
        quantity: 1, // Quantity should be passed from the cart or system
        price: item.price,
        images: item.images
    }));

    const totalPrice = calculateTotalPrice(items);

    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
        e.preventDefault()
        handleCheckoutPop()
        // Handle form submission
    }

    const handleChange = (
        e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
    ) => {
        const { name, value } = e.target
        setFormData({
            ...formData,
            [name]: value,
        })
    }

    const handleDropdownChange = (
        event: React.ChangeEvent<HTMLSelectElement>
    ) => {
        const { name, value } = event.target
        if (name == 'year') {
            setSelectedYear(value)
            setFormData({
                ...formData,
                year: value,
            })
        } else if (name == 'paymentOption') {
            setSeelctedPaymentOption(value)
            setFormData({
                ...formData,
                paymentOption: value,
            })
        }
    }

    const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const file = e.target.files?.[0];
        setFormData({
            ...formData,
            image: file || null,
        });
    };

    const hiddenScrollbar: React.CSSProperties = {
        scrollbarWidth: 'none',
        msOverflowStyle: '-ms-autohiding-scrollbar',
    } as React.CSSProperties;

    return (
        <form onSubmit={handleSubmit}>
            <div className='fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 h-screen'>
            <div className='flex flex-col w-[500px] md:w-[700px] lg:w-[900px] bg-csg-blue-700 rounded-2xl gap-2 md:gap-6 max-h-[95dvh] overflow-y-auto font-vietnam text-sm lg:text-base hidden-scrollbar' 
                style={hiddenScrollbar}
                >
                    <div className='w-full flex flex-row p-6 pb-0'>
                        <div className='font-bold tracking-widest text-lg'>
                            <h1 className='text-xl md:text-3xl mb-2'>CHECKOUT</h1>
                            <p className='text-sm  md:text-lg text-[#4E4EA6]'>YOUR ORDER</p>
                        </div>
                        <div className='ml-auto'>
                            <button
                            onClick={handleCheckoutPop}
                            className='flex flex-row items-center bg-csg-green-100 p-1 md:p-2 rounded-2xl text-main-dark text-sm md:text-base'>
                                <HiOutlineArrowLeft className='text-main-dark w-8 h-5' />
                                CONTINUE SHOPPING
                            </button>
                        </div>
                    </div>

                    <OrderedList 
                    merchItems={items}
                    />

                    <ReciepientInformation 
                        handleChange={handleChange}
                        handleDropdownChange={handleDropdownChange}
                        selectedYear={selectedYear}
                        selectedPaymentOption={selectedPaymentOption}
                        handleImageChange={handleImageChange}
                        formimage={formData.image}
                        status={'PENDING'} // Generated by the system as per figma
                        estimatedDate={'8/23/2024'}
                    />
                    <div className='relative flex flex-row mt-4 h-16 bg-black rounded-b-2xl justify-between items-center text-base md:text-lg last:inset-0'>
                        <div className='flex-1 flex justify-center'>
                            <h2 className='text-[#242460] md:ml-[192px]'>TOTAL PAYMENT<span className='text-[#6479CB] ml-3'>PHP {totalPrice}</span></h2>
                        </div>
                        <div className='p-3 lg:p-5 bg-[#B53629] h-full rounded-br-2xl flex items-center'>
                            <button 
                                type='submit'
                                className='text-[#5E1E17] font-bold tracking-widest'
                            >
                                PLACE ORDER
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    )
}

export default CheckoutPop
